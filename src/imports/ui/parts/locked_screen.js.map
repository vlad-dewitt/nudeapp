{
  "version": 3,
  "file": "locked_screen.js",
  "sourceRoot": "../../../..",
  "sources": [
    "coffee/imports/ui/parts/locked_screen.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA,YAAA,EAAA,KAAA,EAAA,MAAA;EAAA;;AAAA,OAAO,QAAP,MAAA;;AAIA,YAAA,YAAe,MAAA,QAAc,cAAd;EACb,WAAa,CAAC,KAAD,CAAA;;QAKb,CAAA,wBAAA,CAAA;QAIA,CAAA,2BAAA,CAAA;QAKA,CAAA,oBAAA,CAAA;QAYA,CAAA,aAAA,CAAA;EA1Ba;;EAKb,iBAAmB,CAAA,CAAA;;IACjB,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,IAAC,CAAA,aAApC;WACA,GAAG,CAAC,MAAM,CAAC,iBAAX,CAAA;EAFiB;;EAInB,oBAAsB,CAAA,CAAA;;WACpB,QAAQ,CAAC,mBAAT,CAA6B,QAA7B,EAAuC,IAAC,CAAA,aAAxC;EADoB;;EAKtB,aAAe,CAAC,YAAD,CAAA;AACb,QAAA;;IAAA,SAAA,GAAY,MAAM,CAAC,QAAP,CAAgB,MAAA,CAAO,MAAA,CAAO,IAAI,IAAJ,CAAA,CAAP,CAAP,CAAyB,CAAC,IAA1B,CAA+B,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC,SAA1C,CAAhB,CAAqE,CAAC,cAAtE,CAAA;IAEZ,IAAG,SAAA,GAAY,IAAf;MACE,IAAC,CAAA,KAAK,CAAC,UAAU,CAAC,QAAlB,CAA2B,qBAA3B,EADF;KAAA,MAAA;MAGE,IAAC,CAAA,KAAK,CAAC,UAAU,CAAC,MAAlB,CAAA,EAHF;;WAKA,GAAG,CAAC,MAAM,CAAC,iBAAX,CAAA;EARa;;EAYf,MAAQ,CAAA,CAAA;;WACL,CAAA,gBAAgB,MAAA,CAAO,CAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAtB,EAAsC,KAAA,CAAM,CAAE,KAAK,CAAC,OAAR,CAAnE;MACE,CAAA,KAAK,KAAA,CAAM,CAAE,KAAK,CAAC,GAAR,CAAX;QACE,CAAA,KAAK,KAAA,CAAM,CAAE,KAAK,CAAC,OAAR,CAAX;UACE,CAAA,QAAA;QADF,EAAA,IAAA;MADF,EAAA,IAAA;IADF,EAAA,eAAA;EADK;;AA3BK;;AAsCf,KAAA,GAAQ,UAAU,CAAC,MAAX,CACN;EAAA,OAAA,EACE;IAAA,IAAA,EAAM,CAAN;IACA,KAAA,EAAO,MADP;IAEA,UAAA,EAAY;EAFZ,CADF;EAKA,GAAA,EACE;IAAA,IAAA,EAAM,CAAN;IACA,UAAA,EAAY,QADZ;IAEA,cAAA,EAAgB;EAFhB,CANF;EAUA,OAAA,EACE;IAAA,KAAA,EAAO,GAAP;IACA,MAAA,EAAQ,GADR;IAEA,MAAA,EAAQ,EAFR;IAGA,UAAA,EAAY;EAHZ;AAXF,CADM;;AAmBR,OAAA,QAAe,MAAA,CAAO,cAAA,CAAe,YAAf,CAAP",
  "sourcesContent": [
    "import NudeLogo from './sub/nude_logo'\n\n\n\nLockedScreen = class extends PureComponent\n  constructor: (props) ->\n    super props\n\n\n\n  componentDidMount: =>\n    AppState.addEventListener 'check', @checkAppState\n    API.global.startAppLockTimer()\n\n  componentWillUnmount: =>\n    AppState.removeEventListener 'change', @checkAppState\n\n\n\n  checkAppState: (nextAppState) =>\n    time_left = moment.duration(moment(moment new Date()).diff(@props.app.locked_at)).asMilliseconds()\n    \n    if time_left > 1000\n      @props.navigation.navigate 'PinCodeVerification'\n    else\n      @props.navigation.goBack()\n\n    API.global.clearAppLockTimer()\n\n\n\n  render: =>\n    <ImageBackground source={ Assets.img.pictures.nude_bg_leafs } style={ Shape.BGImage }>\n      <View style={ Shape.Box }>\n        <View style={ Shape.LogoBox }>\n          <NudeLogo/>\n        </View>\n      </View>\n    </ImageBackground>\n\n\n\nShape = StyleSheet.create\n  BGImage:\n    flex: 1\n    width: '100%'\n    resizeMode: 'contain'\n\n  Box:\n    flex: 1\n    alignItems: 'center'\n    justifyContent: 'center'\n\n  LogoBox:\n    width: 200\n    height: 220\n    bottom: 15\n    alignItems: 'center'\n\n\n\nexport default Hybrid withNavigation LockedScreen\n"
  ]
}