// Generated by CoffeeScript 2.4.1
var LockedScreen, Shape, _class,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

import NudeLogo from './sub/nude_logo';

LockedScreen = _class = class extends PureComponent {
  constructor(props) {
    super(props);
    this.componentDidMount = this.componentDidMount.bind(this);
    this.componentWillUnmount = this.componentWillUnmount.bind(this);
    this.checkAppState = this.checkAppState.bind(this);
    this.render = this.render.bind(this);
  }

  componentDidMount() {
    boundMethodCheck(this, _class);
    AppState.addEventListener('check', this.checkAppState);
    return API.global.startAppLockTimer();
  }

  componentWillUnmount() {
    boundMethodCheck(this, _class);
    return AppState.removeEventListener('change', this.checkAppState);
  }

  checkAppState(nextAppState) {
    var time_left;
    boundMethodCheck(this, _class);
    time_left = moment.duration(moment(moment(new Date())).diff(this.props.app.locked_at)).asMilliseconds();
    if (time_left > 1000) {
      this.props.navigation.navigate('PinCodeVerification');
    } else {
      this.props.navigation.goBack();
    }
    return API.global.clearAppLockTimer();
  }

  render() {
    boundMethodCheck(this, _class);
    return <ImageBackground source={Assets.img.pictures.nude_bg_leafs} style={Shape.BGImage}>
      <View style={Shape.Box}>
        <View style={Shape.LogoBox}>
          <NudeLogo />
        </View>
      </View>
    </ImageBackground>;
  }

};

Shape = StyleSheet.create({
  BGImage: {
    flex: 1,
    width: '100%',
    resizeMode: 'contain'
  },
  Box: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  },
  LogoBox: {
    width: 200,
    height: 220,
    bottom: 15,
    alignItems: 'center'
  }
});

export default Hybrid(withNavigation(LockedScreen));

//# sourceMappingURL=locked_screen.js.map
