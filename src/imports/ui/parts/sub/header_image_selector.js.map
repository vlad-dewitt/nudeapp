{
  "version": 3,
  "file": "header_image_selector.js",
  "sourceRoot": "../../../../..",
  "sources": [
    "coffee/imports/ui/parts/sub/header_image_selector.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA,mBAAA,EAAA,MAAA;EAAA;;AAAA,mBAAA,YAAsB,MAAA,QAAc,UAAd;EACpB,WAAa,CAAC,KAAD,CAAA;;QAOb,CAAA,4BAAA,CAAA;QAQA,CAAA,yBAAA,CAAA;QAMA,CAAA,YAAA,CAAA;QAcA,CAAA,aAAA,CAAA;IAjCE,IAAC,CAAA,KAAD,GACE;MAAA,MAAA,EAAQ,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC;IAAnB;EAHS;;EAOb,qBAAuB,CAAC,SAAD,EAAY,SAAZ,CAAA;;IACrB,IAAG,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC,cAAX,KAA+B,SAAS,CAAC,GAAG,CAAC,cAAhD;aACE,KADF;KAAA,MAEK,IAAG,IAAC,CAAA,KAAK,CAAC,MAAP,KAAmB,SAAS,CAAC,MAAhC;aACH,KADG;KAAA,MAAA;aAGH,MAHG;;EAHgB;;EAQvB,kBAAoB,CAAA,CAAA;;WAClB,IAAC,CAAA,QAAD,CACE;MAAA,MAAA,EAAQ,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC;IAAnB,CADF;EADkB;;EAMpB,KAAO,CAAA,CAAA;AACL,QAAA;;IAAA,IAAG,IAAC,CAAA,KAAK,CAAC,MAAM,CAAC,MAAjB;MACE,OAAA,GAAU;MACV,IAAC,CAAA,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAtB,CAA0B,CAAC,IAAD,CAAA,GAAA;QACxB,IAAI,CAAC,IAAL,GAAe,IAAI,CAAC,SAAL,KAAkB,OAArB,GAAkC,OAAlC,GAA+C;eAC3D,OAAO,CAAC,IAAR,CAAa,IAAb;MAFwB,CAA1B;MAGA,GAAG,CAAC,MAAM,CAAC,QAAX,CAAoB;QAAE,MAAA,EAAQ;MAAV,CAApB,EAAqC,OAArC;MACA,KAAK,CAAC,IAAN,CAAW,kBAAX,EACE;QAAA,MAAA,EAAQ,KAAR;QACA,OAAA,EAAS;MADT,CADF;aAGA,IAAC,CAAA,KAAK,CAAC,UAAU,CAAC,MAAlB,CAAA,EATF;;EADK;;EAcP,MAAQ,CAAA,CAAA;;IACN,IAAG,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,MAAlC,GAA2C,CAA9C;aACG,CAAA,iBAAiB,OAAA,CAAQ,CAAE,IAAC,CAAA,KAAH,CAAzB;QACE,CAAA,KAAK,KAAA,CAAM,CAAE,UAAU,CAAC,KAAb,CAAX,CAA+B,IAA/B,EAAA,IAAA;MADF,EAAA,gBAAA,EADH;KAAA,MAAA;aAKE,KALF;;EADM;;AApCY;;AA8CtB,OAAA,QAAe,MAAA,CAAO,cAAA,CAAe,mBAAf,CAAP",
  "sourcesContent": [
    "HeaderImageSelector = class extends Component\n  constructor: (props) ->\n    super props\n    @state =\n      config: @props.app.image_selector\n\n\n\n  shouldComponentUpdate: (nextProps, nextState) =>\n    if @props.app.image_selector isnt nextProps.app.image_selector\n      yes\n    else if @state.config isnt nextState.config\n      yes\n    else\n      no\n\n  componentDidUpdate: =>\n    @setState\n      config: @props.app.image_selector\n\n\n\n  press: =>\n    if @state.config.active\n      objects = []\n      @state.config.objects.map (item) =>\n        item.type = if item.mediaType is 'photo' then 'image' else 'video'\n        objects.push item\n      API.global.addMedia { import: yes }, objects\n      Ambry.call 'setImageSelector',\n        active: no\n        objects: []\n      @props.navigation.goBack()\n\n\n\n  render: =>\n    if @props.app.image_selector.objects.length > 0\n      <TouchableOpacity onPress={ @press }>\n        <Text style={ Typography.Small }>Done</Text>\n      </TouchableOpacity>\n    else\n      null\n\n\n\nexport default Hybrid withNavigation HeaderImageSelector\n"
  ]
}