// Generated by CoffeeScript 2.4.1
var HomePlus, Shape, _class,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

import PlusIOS from './plus_ios';

import PlusAndroid from './plus_android';

HomePlus = _class = class extends PureComponent {
  constructor(props) {
    super(props);
    this.componentDidMount = this.componentDidMount.bind(this);
    this.toggle = this.toggle.bind(this);
    this.addMedia = this.addMedia.bind(this);
    this.addFromCamera = this.addFromCamera.bind(this);
    this.render = this.render.bind(this);
    this.state = {
      plus_expanded: false,
      camera_access: false,
      fs_access: false,
      picker_options: {
        mediaTypes: ImagePicker.MediaTypeOptions.All,
        allowsEditing: false,
        base64: false,
        exif: false
      }
    };
  }

  componentDidMount() {
    boundMethodCheck(this, _class);
    return Permissions.getAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL).then((res) => {
      return this.setState({
        camera_access: res.permissions.camera.status === 'granted',
        fs_access: res.permissions.cameraRoll.status === 'granted'
      });
    });
  }

  toggle(expanded) {
    boundMethodCheck(this, _class);
    return this.setState({
      plus_expanded: expanded
    });
  }

  addMedia() {
    boundMethodCheck(this, _class);
    if (!this.state.fs_access) {
      return Permissions.askAsync(Permissions.CAMERA_ROLL).then((res) => {
        if (res.status === 'granted') {
          return this.setState({
            fs_access: true
          });
        } else {
          return Alert.alert('Error', 'Nude requires access to your phone storage to add photos');
        }
      });
    } else {
      this.props.navigation.navigate('ImageSelector');
      return this.toggle(false);
    }
  }

  addFromCamera() {
    boundMethodCheck(this, _class);
    if (!this.state.camera_access) {
      return Permissions.getAsync(Permissions.CAMERA).then((res) => {
        if (res.status === 'granted') {
          return this.setState({
            camera_access: true
          });
        } else {
          return Alert.alert('Error', 'Nude requires access to your camera to take pictures');
        }
      });
    } else {
      Ambry.call('setLockLock', true);
      setTimeout(() => {
        return ImagePicker.launchCameraAsync(this.state.picker_options).then((res) => {
          if (res.cancelled !== true) {
            API.global.addMedia({
              import: false
            }, [res]);
          }
          return Ambry.call('setLockLock', false);
        });
      }, 200);
      return this.toggle(false);
    }
  }

  render() {
    boundMethodCheck(this, _class);
    return <View style={Shape.Box}>
      <View pointerEvents='box-none'>
        <Image source={Assets.img.pictures.white_bottom_gradient} style={{
        width: '100%',
        height: '100%',
        resizeMode: 'stretch'
      }} />
      </View>
      {(Platform.OS === 'ios' ? <PlusIOS state={this.state.plus_expanded} onPress={this.toggle} cameraAction={this.addFromCamera} mediaAction={this.addMedia} /> : <PlusAndroid state={this.state.plus_expanded} onPress={this.toggle} cameraAction={this.addFromCamera} mediaAction={this.addMedia} />)}
    </View>;
  }

};

Shape = StyleSheet.create({
  Box: {
    width: '100%',
    height: '100%'
  }
});

export default Hybrid(withNavigation(HomePlus));

//# sourceMappingURL=home_plus.js.map
