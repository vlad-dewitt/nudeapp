// Generated by CoffeeScript 2.4.1
var AskAccessFS, Shape, _class,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

import BGGradient from './sub/bg_gradient';

AskAccessFS = _class = class extends PureComponent {
  constructor(props) {
    super(props);
    this.openLink = this.openLink.bind(this);
    this.submit = this.submit.bind(this);
    this.next = this.next.bind(this);
    this.render = this.render.bind(this);
  }

  openLink(link) {
    boundMethodCheck(this, _class);
    return Linking.openURL(`${WebsiteAddress}/${link}`);
  }

  async submit() {
    boundMethodCheck(this, _class);
    await Permissions.askAsync(Permissions.CAMERA_ROLL);
    return this.next();
  }

  async next() {
    var Camera_permission_status;
    boundMethodCheck(this, _class);
    ({
      status: Camera_permission_status
    } = (await Permissions.getAsync(Permissions.CAMERA)));
    if (Camera_permission_status !== 'granted') {
      return this.props.navigation.navigate('AskAccessCamera');
    } else {
      return API.global.checkConnection(async(connected) => {
        if (connected) {
          await API.global.storeUser();
          return API.global.syncUserLocally((res) => {
            return this.props.navigation.navigate('Home');
          });
        } else {
          return Alert.alert('Connection Error', 'Please check your internet connection');
        }
      });
    }
  }

  render() {
    boundMethodCheck(this, _class);
    return <BGGradient colors={['#EDA9A9', '#FFD8C0']}>
      <View style={Shape.Box}>
        <View style={Shape.IconBox}>
          <Image source={Assets.img.icons.fs_access} style={{
        width: '100%',
        height: '100%',
        resizeMode: 'contain'
      }} />
        </View>
        <Text style={[Typography.SemiBold, Typography.Big, Shape.Text, Shape.Title]}>{"Nude needs access to\nyour file storage"}</Text>
        <Text style={[Typography.Medium, Typography.Regular, Shape.Text]}>{"This allows Nude to access and\nencrypt your photos or videos"}</Text>
        <View style={Shape.ButtonsContainer}>
          <Theme.ButtonWhite style={{
        width: Window.width - 100
      }} text='Grant Access' color='#E0BDBD' onPress={this.submit} />
          <Text style={[Typography.Small, Typography.White, Shape.Skip]} onPress={this.next}>Cancel</Text>
        </View>
        <Text style={[Typography.Medium, Typography.Small, Shape.AgreeTerms]}>By tapping the button above, you agree to the <Text style={{
        textDecorationLine: 'underline'
      }} onPress={this.openLink.bind(this, 'terms-of-service')}>Terms & Conditions</Text> and <Text style={{
        textDecorationLine: 'underline'
      }} onPress={this.openLink.bind(this, 'privacy-policy')}>Privacy Policy</Text></Text>
      </View>
    </BGGradient>;
  }

};

Shape = StyleSheet.create({
  Box: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  },
  IconBox: {
    width: 86,
    height: 86,
    alignItems: 'center'
  },
  Text: {
    width: Window.width - 130,
    textAlign: 'left'
  },
  Title: {
    marginVertical: 30
  },
  ButtonsContainer: {
    alignItems: 'center',
    justifyContent: 'center',
    marginTop: 40
  },
  Skip: {
    padding: 20
  },
  AgreeTerms: {
    position: 'absolute',
    width: Window.width - 60,
    bottom: 30,
    textAlign: 'center',
    opacity: .7
  }
});

export default Hybrid(AskAccessFS);

//# sourceMappingURL=ask_access_fs.js.map
