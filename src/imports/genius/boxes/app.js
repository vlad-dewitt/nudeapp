// Generated by CoffeeScript 2.4.1
var origin;

origin = {
  initial_data: null,
  loaded: false,
  user: {
    logged: false,
    data: null,
    full_pin: null,
    email: ''
  },
  locked_at: null,
  lock_lock: false,
  media_viewer: {
    objects: [],
    first: 0,
    focus: false
  },
  scanning: {
    active: false,
    progress: 0
  },
  modal_screen: {
    visible: false,
    type: ''
  },
  select_mode: {
    available: false,
    active: false
  },
  data: {
    media: []
  },
  image_selector: {
    active: false,
    objects: []
  },
  import_notification: {
    visible: false,
    objects: []
  }
};

export default function(state = origin, act) {
  var sorted, sorted_breakins;
  switch (act.type) {
    case 'setInitialData':
      state = {...state};
      state = {
        ...state,
        initial_data: act.data
      };
      return state;
    case 'setRestoreUserMode':
      state = {...state};
      state = {
        ...state,
        restore_user_mode: act.data
      };
      return state;
    case 'setUser':
      state = {...state};
      if (act.data.data) {
        if (act.data.data.breakins) {
          sorted_breakins = _.sortBy(act.data.data.breakins, (object) => {
            return -(new Date(object.date).getTime());
          });
        }
      }
      state = {
        ...state,
        user: {
          ...act.data,
          data: {
            ...act.data.data,
            breakins: sorted_breakins || []
          }
        }
      };
      // console.log 'setUser'
      // console.log state
      return state;
    case 'setAppLoaded':
      state = {...state};
      state = {
        ...state,
        loaded: true
      };
      return state;
    case 'setFullPin':
      state = {...state};
      state = {
        ...state,
        user: {
          ...state.user,
          full_pin: act.data
        }
      };
      return state;
    case 'setEmailAddress':
      state = {...state};
      state = {
        ...state,
        user: {
          ...state.user,
          email: act.data
        }
      };
      return state;
    case 'setAppLockTimer':
      state = {...state};
      state = {
        ...state,
        locked_at: act.data
      };
      return state;
    case 'setLockLock':
      state = {...state};
      state = {
        ...state,
        lock_lock: act.data
      };
      return state;
    case 'setModalScreen':
      state = {...state};
      state = {
        ...state,
        modal_screen: {
          visible: act.data.visible,
          type: act.data.type
        }
      };
      return state;
    case 'setScanning':
      state = {...state};
      state = {
        ...state,
        scanning: act.data
      };
      return state;
    case 'setSelectMode':
      state = {...state};
      state = {
        ...state,
        select_mode: act.data
      };
      return state;
    case 'fillMediaViewer':
      state = {...state};
      state = {
        ...state,
        media_viewer: {
          objects: act.data.objects,
          first: act.data.first,
          focus: false
        }
      };
      return state;
    case 'setMediaViewerFocus':
      state = {...state};
      state = {
        ...state,
        media_viewer: {
          ...state.media_viewer,
          focus: act.data
        }
      };
      return state;
    case 'clearMediaViewer':
      state = {...state};
      state = {
        ...state,
        media_viewer: {
          objects: [],
          first: 0,
          focus: false
        }
      };
      return state;
    case 'setMediaData':
      state = {...state};
      sorted = _.sortBy(act.data, (object) => {
        return -(new Date(object.date).getTime());
      });
      state = {
        ...state,
        data: {
          ...state.data,
          media: sorted
        }
      };
      return state;
    case 'setImageSelector':
      state = {...state};
      state = {
        ...state,
        image_selector: act.data
      };
      return state;
    case 'setImportNotification':
      state = {...state};
      state = {
        ...state,
        import_notification: act.data
      };
      return state;
    default:
      return state;
  }
};

//# sourceMappingURL=app.js.map
