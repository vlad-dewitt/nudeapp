{
  "version": 3,
  "file": "app.js",
  "sourceRoot": "../../../..",
  "sources": [
    "coffee/imports/genius/boxes/app.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "origin =\n  initial_data: null\n  loaded: no\n  user:\n    logged: no\n    data: null\n    full_pin: null\n    email: ''\n  locked_at: null\n  lock_lock: no\n  media_viewer:\n    objects: []\n    first: 0\n    focus: no\n  scanning:\n    active: no\n    progress: 0\n  modal_screen:\n    visible: no\n    type: ''\n  select_mode:\n    available: no\n    active: no\n  data:\n    media: []\n  image_selector:\n    active: no\n    objects: []\n  import_notification:\n    visible: no\n    objects: []\n\n\n\nexport default (state = origin, act) ->\n  switch act.type\n\n    when 'setInitialData'\n      state = { state... }\n\n      state = {\n        state...\n        initial_data: act.data\n      }\n\n      state\n\n\n\n    when 'setRestoreUserMode'\n      state = { state... }\n\n      state = {\n        state...\n        restore_user_mode: act.data\n      }\n\n      state\n\n\n\n    when 'setUser'\n      state = { state... }\n\n      if act.data.data\n        if act.data.data.breakins\n          sorted_breakins = _.sortBy act.data.data.breakins, (object) =>\n            - (new Date(object.date).getTime())\n\n      state = {\n        state...\n        user: {\n          act.data...\n          data: {\n            act.data.data...\n            breakins: sorted_breakins or []\n          }\n        }\n      }\n\n      # console.log 'setUser'\n      # console.log state\n\n      state\n\n\n\n    when 'setAppLoaded'\n      state = { state... }\n\n      state = {\n        state...\n        loaded: yes\n      }\n\n      state\n\n\n\n    when 'setFullPin'\n      state = { state... }\n\n      state = {\n        state...\n        user: {\n          state.user...\n          full_pin: act.data\n        }\n      }\n\n      state\n\n\n\n    when 'setEmailAddress'\n      state = { state... }\n\n      state = {\n        state...\n        user: {\n          state.user...\n          email: act.data\n        }\n      }\n\n      state\n\n\n\n    when 'setAppLockTimer'\n      state = { state... }\n\n      state = {\n        state...\n        locked_at: act.data\n      }\n\n      state\n\n\n\n    when 'setLockLock'\n      state = { state... }\n\n      state = {\n        state...\n        lock_lock: act.data\n      }\n\n      state\n\n\n\n    when 'setModalScreen'\n      state = { state... }\n\n      state = {\n        state...\n        modal_screen:\n          visible: act.data.visible\n          type: act.data.type\n      }\n\n      state\n\n\n\n    when 'setScanning'\n      state = { state... }\n\n      state = {\n        state...\n        scanning: act.data\n      }\n\n      state\n\n\n\n    when 'setSelectMode'\n      state = { state... }\n\n      state = {\n        state...\n        select_mode: act.data\n      }\n\n      state\n\n\n\n    when 'fillMediaViewer'\n      state = { state... }\n\n      state = {\n        state...\n        media_viewer:\n          objects: act.data.objects\n          first: act.data.first\n          focus: no\n      }\n\n      state\n\n\n\n    when 'setMediaViewerFocus'\n      state = { state... }\n\n      state = {\n        state...\n        media_viewer: {\n          state.media_viewer...\n          focus: act.data\n        }\n      }\n\n      state\n\n\n\n    when 'clearMediaViewer'\n      state = { state... }\n\n      state = {\n        state...\n        media_viewer:\n          objects: []\n          first: 0\n          focus: no\n      }\n\n      state\n\n\n\n    when 'setMediaData'\n      state = { state... }\n\n      sorted = _.sortBy act.data, (object) =>\n        - (new Date(object.date).getTime())\n\n      state = {\n        state...\n        data: {\n          state.data...\n          media: sorted\n        }\n      }\n\n      state\n\n\n\n    when 'setImageSelector'\n      state = { state... }\n\n      state = {\n        state...\n        image_selector: act.data\n      }\n\n      state\n\n\n\n    when 'setImportNotification'\n      state = { state... }\n\n      state = {\n        state...\n        import_notification: act.data\n      }\n\n      state\n\n\n\n    else state\n"
  ]
}