// Generated by CoffeeScript 2.4.1
var App, _class,
  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

import Navigator from './genius/navigator/kit';

import ModalScreen from './ui/parts/modal_screen';

App = _class = class extends Component {
  constructor(props) {
    super(props);
    this.componentDidMount = this.componentDidMount.bind(this);
    this.loadFonts = this.loadFonts.bind(this);
    this.render = this.render.bind(this);
  }

  async componentDidMount() {
    boundMethodCheck(this, _class);
    ScreenOrientation.lockAsync(ScreenOrientation.Orientation.PORTRAIT);
    SplashScreen.hide();
    API.global.setInitialData();
    await this.loadFonts();
    await API.global.syncUserLocally((res) => {});
    // console.log '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
    // console.log "(((await API.global.syncUserLocally (finished):"
    // console.log res
    // console.log 'await API.global.syncUserLocally)))'
    // console.log '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
    API.global.syncMediaLocally();
    return Ambry.call('setAppLoaded');
  }

  loadFonts() {
    boundMethodCheck(this, _class);
    return Font.loadAsync({
      'Montserrat-Thin': require('../../assets/fonts/Montserrat-Thin.ttf'),
      'Montserrat-Light': require('../../assets/fonts/Montserrat-Light.ttf'),
      'Montserrat-Regular': require('../../assets/fonts/Montserrat-Regular.ttf'),
      'Montserrat-Medium': require('../../assets/fonts/Montserrat-Medium.ttf'),
      'Montserrat-SemiBold': require('../../assets/fonts/Montserrat-SemiBold.ttf'),
      'Montserrat-Bold': require('../../assets/fonts/Montserrat-Bold.ttf')
    });
  }

  render() {
    boundMethodCheck(this, _class);
    return <View style={{
        width: '100%',
        height: '100%'
      }}>
      <Navigator screenProps={{
        ...this.props,
        loaded: this.props.app.loaded
      }} />
      {(this.props.app.modal_screen.visible ? <ModalScreen /> : void 0)}
    </View>;
  }

};

export default Hybrid(App);

//# sourceMappingURL=kit.js.map
